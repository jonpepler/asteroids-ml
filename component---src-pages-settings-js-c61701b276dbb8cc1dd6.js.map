{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/theme.js","webpack:///./src/components/footer.js","webpack:///./src/pages/settings.js","webpack:///./src/components/seo.js"],"names":["Header","siteTitle","to","defaultProps","Layout","children","data","site","siteMetadata","title","Theme","propTypes","PropTypes","node","Footer","props","className","additionalClassName","version","Date","getFullYear","href","Settings","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"4IAMMA,G,UAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,gCACE,4BAAI,kBAAC,OAAD,CAAMC,GAAG,KAAKD,OAQtBD,EAAOG,aAAe,CACpBF,UAAW,IAGED,Q,sBCmBAI,IAxBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQL,UAAWK,EAAKC,KAAKC,aAAaC,QAC1C,8BAAOJ,GACP,kBAAC,IAAD,S,kCC9BN,8CAIMK,GAJN,UAIc,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAH,OAAkB,oCAAGA,KACnCK,EAAMC,UAAY,CAChBN,SAAUO,IAAUC,MAEPH,O,yUCRf,+CAgBeI,IAVA,SAACC,GAAD,OACb,4BAAQC,UAAWD,EAAME,qBAAzB,gBACgBC,IADhB,IACyB,yBAAKF,UAAU,mBAAf,KADzB,OACqE,IAAIG,MAAOC,cADhF,IAC+F,uBAAGC,KAAK,gCAAR,gB,2FCRjG,gFAuBeC,UAfE,WACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKb,MAAM,aACX,wCACA,yBAAKO,UAAU,cACb,kBAAC,OAAD,CAAMd,GAAG,KAAT,uBACA,kBAAC,OAAD,CAAMA,GAAG,SAAT,2B,mFCJV,SAASqB,EAAT,GAAmD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMjB,EAAS,EAATA,MAC/BF,EADwC,OACxCA,KAcFoB,EAAkBH,GAAejB,EAAKC,aAAagB,YAEzD,OACE,kBAAC,iBAAD,KACE,kBAAC,SAAD,CACEI,eAAgB,CACdH,QAEFhB,MAAOA,EACPoB,cAAa,QAAUtB,EAAKC,aAAaC,MACzCiB,KAAM,CACJ,CACEI,KAAM,cACNC,QAASJ,GAEX,CACEK,SAAU,WACVD,QAAStB,GAEX,CACEuB,SAAU,iBACVD,QAASJ,GAEX,CACEK,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASxB,EAAKC,aAAayB,QAE7B,CACEH,KAAM,gBACNC,QAAStB,GAEX,CACEqB,KAAM,sBACNC,QAASJ,IAEXO,OAAOR,MAMjBH,EAAIpB,aAAe,CACjBsB,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD","file":"component---src-pages-settings-js-c61701b276dbb8cc1dd6.js","sourcesContent":["import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport './style/header.scss'\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <h1><Link to='/'>{siteTitle}</Link></h1>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ''\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport './layout.css'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './style/theme.scss'\n\nconst Theme = ({ children }) => <>{children}</>\nTheme.propTypes = {\n  children: PropTypes.node\n}\nexport default Theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { version } from '../../package.json'\n\nimport './style/footer.scss'\n\nconst Footer = (props) => (\n  <footer className={props.additionalClassName}>\n    asteroids-ml {version} <div className='footer__divider'>|</div> Â© {new Date().getFullYear()} <a href='https://github.com/jonpepler'>jonpepler</a>\n  </footer>\n)\n\nFooter.propTypes = {\n  additionalClassName: PropTypes.string\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport Theme from '../components/theme'\n\nconst Settings = () => {\n  return (\n    <Theme>\n      <Layout>\n        <SEO title='settings' />\n        <h1>settings</h1>\n        <div className='link-block'>\n          <Link to='/'>go back to training</Link>\n          <Link to='/play'>go back to playing</Link>\n        </div>\n      </Layout>\n    </Theme>\n  )\n}\n\nexport default Settings\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet, HelmetProvider } from 'react-helmet-async'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO ({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <HelmetProvider>\n      <Helmet\n        htmlAttributes={{\n          lang\n        }}\n        title={title}\n        titleTemplate={`%s | ${site.siteMetadata.title}`}\n        meta={[\n          {\n            name: 'description',\n            content: metaDescription\n          },\n          {\n            property: 'og:title',\n            content: title\n          },\n          {\n            property: 'og:description',\n            content: metaDescription\n          },\n          {\n            property: 'og:type',\n            content: 'website'\n          },\n          {\n            name: 'twitter:card',\n            content: 'summary'\n          },\n          {\n            name: 'twitter:creator',\n            content: site.siteMetadata.author\n          },\n          {\n            name: 'twitter:title',\n            content: title\n          },\n          {\n            name: 'twitter:description',\n            content: metaDescription\n          }\n        ].concat(meta)}\n      />\n    </HelmetProvider>\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: ''\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}